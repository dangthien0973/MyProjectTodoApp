@using Services;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MyProjectTodoApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="todoList">
                <span class="oi oi-plus" aria-hidden="true"></span> List Todo
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="Logout">
                <span class="oi oi-book" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [Inject] ILogin Login { set; get; }
    [Inject] protected NavigationManager NavigationManager { get; set; }
    [Inject] IToastService ToastService { set; get; }
    [CascadingParameter]
    public Error? Error { get; set; }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    public void Logout()
    {
        try
        {
            Login.Logout();
            StateHasChanged();
            ToastService.ShowSuccess("Logout success ! See you laters");
            NavigationManager.NavigateTo("/Account/login");

        }
        catch(Exception ex)
        {
            Error?.ProcessError(ex);
            StateHasChanged();
        }

    }
}
